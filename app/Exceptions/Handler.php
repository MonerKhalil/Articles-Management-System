<?php

namespace App\Exceptions;

use App\Application\Application;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        NotFoundHttpException::class
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->renderable(function (NotFoundHttpException $e, $request) {
            if ($request->is('/*')) {
                return Application::getApp()->getHandleJson()
                    ->ErrorsHandle("exception",$e->getMessage());
            }
        });
    }
    protected function unauthenticated($request, AuthenticationException $exception)
    {
        if ($request->expectsJson()) {
            $temp = "";
            if($request->lang ==="en"){
                $temp = "Unauthenticated.";
            }else {
                $temp = ".التوكين الحالي غير مصدق";
            }
            return Application::getApp()->getHandleJson()->ErrorsHandle("token",$temp);
        }
        return parent::unauthenticated($request, $exception); // TODO: Change the autogenerated stub
    }

    public function render($request, Throwable $e)
    {
        if($request->hasHeader("Authorization")){
            if (is_null(auth("user")->user())) {
                $temp = "";
                if($request->lang ==="en"){
                    $temp = "Unauthenticated.";
                }else {
                    $temp = ".التوكين الحالي غير مصدق";
                }
                return Application::getApp()->getHandleJson()->ErrorsHandle("token",$temp);
            }
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
